steps:
- name: 'gcr.io/cloud-builders/git'
  id: set-read-key
  secretEnv: ['READ_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    echo "$$READ_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh


- name: 'northamerica-northeast1-docker.pkg.dev/${_REGISTRY_PROJECT}/builders/${_TERRAFORM_VERSION}'
  id: terraform-import-state
  entrypoint: 'bash'
  args: 
    - '-c'
    - |

      echo "what is in the directory";
      ls -l /workspace/; 

      cd /workspace/terraform;

      terraform init -input=false -backend-config="${_BACKEND_CONFIG_BUCKET}" -backend-config="${_BACKEND_CONFIG_PREFIX}"
      # check if the state was already imported for service accounts
      
      # import service account:
      #module.service-account.google_service_account.default projects/{{project}}/serviceAccounts/{{email}}

      EMAIL=${_SERVICE_ACCOUNT_EMAIL};
      terraform state list | grep "module.service-account.google_service_account.default" > /workspace/SERVICE_ACCOUNT_EXISTS;


      if [[ $$EMAIL ]]; then
        if [[ ! -s /workspace/SERVICE_ACCOUNT_EXISTS ]]; then 
          terraform import -var-file=${_VAR_FILE} module.service-account.google_service_account.default projects/${PROJECT_ID}/serviceAccounts/$$EMAIL; 
                
        else 
          echo;
          echo "The service account already exists in the state";
          echo;
        fi
      else
        echo;
        echo "The email needs to be passed to the script for terraform import";
        echo;
      fi     
  
  volumes:
  - name: 'ssh'
    path: /root/.ssh

substitutions:
    _KEY_PROJECT: cio-secrets-pr-cb7b98
    _READ_KEY_NAME: rpabot_read_key
    _KEY_VERSION: "latest"
    _TERRAFORM_VERSION: terraform:0.13.3
    _REGISTRY_PROJECT: cio-gke-devops-e4993356
    _DIR: .    
    #_used for imports to projects terraform
    _SERVICE_ACCOUNT_EMAIL: 
    _BACKEND_CONFIG_BUCKET: bucket=tf-state-${PROJECT_ID} 
    _BACKEND_CONFIG_PREFIX: prefix=terraform/${_ENV}
    _VAR_FILE: ${_ENV}.tfvars
availableSecrets:
  secretManager:
  - versionName: projects/${_KEY_PROJECT}/secrets/${_READ_KEY_NAME}/versions/${_KEY_VERSION}
    env: 'READ_KEY'
timeout: 1200s